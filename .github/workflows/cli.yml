---
name: Run CLI
on:
  push:
    branches:
      - master
    paths:
      - '.installer/**'
      - 'apps/**'
      - 'preinstall/**'
      - 'traefik/**'
      - 'scripts/**'
      - 'wiki/**'
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Dockserver Wiki on GitHub Pages
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: '0'

      - name: Set up Python
        uses: actions/setup-python@v2.3.1
        with:
          python-version: 3.x

      - run: python3 -m pip install --upgrade pip
      - run: python3 -m pip install --upgrade --force-reinstall -r wiki/requirements.txt
      - run: mkdocs gh-deploy --force --config-file wiki/mkdocs.yml --remote-branch wiki

  discord:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ success() }}
    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.CR_PAT }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          username: 'DockServer-Bot'
          avatar-url: 'https://octodex.github.com/images/Terracottocat_Single.png'
          title: 'DockServer-Bot: {{STATUS}}'
          description: 'DockServer-Bot trigged this {{STATUS}}!'
          include-details: 'true'
          color-success: '#4287f5'
          color-failure: 'eb4034'
          color-cancelled: '0x42daf5'
  crlf:
    name: Check Mixed Line Endings action
    needs: [ discord, deploy ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.CR_PAT }}
        fetch-depth: 0

    - name: Run CRLF changes
      run: |
        API=$(curl -H "Authorization: token ${{ secrets.CR_PAT }}" -X GET https://api.github.com/rate_limit | jq --raw-output '.rate.limit')
        if [[ $API -gt 101 ]]; then
           echo "Fetch new Versions"
           if test -f "./.github/crlf.sh"; then
              bash "./.github/crlf.sh"
           fi
        elif [[ $API -lt 100 ]]; then
             echo " GitHube API busted " && exit 0
        else
             echo " no reponse from Github API ? Maybe down or busted " && exit 0
        fi
